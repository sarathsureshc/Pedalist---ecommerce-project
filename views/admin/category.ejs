<%- include('../partials/admin/header.ejs') %>
    <div class="wrapper">
        <section class="user-main-content">
            <header class="dashboard-header">
                <h1>Category Management</h1>
                <a href="/admin/logout" class="dashboard-logout-button btn btn-danger">Logout</a>
            </header>

            <!-- Breadcrumbs -->
            <nav class="dashboard-breadcrumbs">
                <a href="/admin">Home</a> &gt; <span>Category</span>
            </nav>

            <div class="dashboard-content">
                <div class="user-management-card">

                    <!-- Category Addition Form -->
                    <form method="post" action="/admin/add-category" onsubmit="return handleFormSubmit(event)">
                        <div class="mb-4">
                            <label for="product_name" class="form-label">Name</label>
                            <input type="text" name="name" placeholder="Type here" class="form-control"
                                id="product_name" required />
                            <div id="name-error" class="error-message"></div>
                        </div>
                        <div class="mb-4">
                            <label class="form-label">Description</label>
                            <textarea placeholder="Type here" name="description" class="form-control" id="descriptionId"
                                required></textarea>
                            <div id="description-error" class="error-message"></div>
                        </div>
                        <div class="d-grid">
                            <button class="btn btn-primary" type="submit">Add Category</button>
                        </div>
                    </form>

                    <!-- Category Table -->

                    <div class="table-responsive">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th class="text-center">#</th>
                                    <th>Name</th>
                                    <th>Description</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                    <th class="text-start">Edit</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% cat.reverse().forEach((category, index)=> { %>
                                    <tr style="<%= category.isDeleted ? 'opacity: 0.5;' : '' %>">
                                        <td class="text-center">
                                            <%= index + 1 %>
                                        </td>
                                        <td class="text-start">
                                            <%= category.name %>
                                        </td>
                                        <td class="text-start">
                                            <%= category.description %>
                                        </td>
                                        
                                        <td class="text-start">
                                            <span
                                                class="badge rounded-pill <%= category.isListed ? 'bg-success' : 'bg-danger' %>"
                                                style="width: 60px">
                                                <%= category.isListed ? 'Listed' : 'Unlisted' %>
                                            </span>
                                        </td>
                                        <td class="text-start">
                                            <button class="btn <%= category.isListed ? 'btn-danger' : 'btn-success' %>"
                                                style="width: 70px" <% if (category.isDeleted) { %> disabled <% } %>
                                                    >
                                                    <a href="/admin/<%= category.isListed ? 'unlist' : 'list' %>-category?id=<%= category._id %>"
                                                        class="text-white">
                                                        <%= category.isListed ? 'Unlist' : 'List' %>
                                                    </a>
                                            </button>
                                        </td>
                                        <td class="text-start">
                                            <button class="btn btn-info text-white" <% if (category.isDeleted) { %>
                                                disabled <% } %>>
                                                    <a href="/admin/edit-category?id=<%= category._id %>">
                                                        Edit</a></button>
                                        </td>
                                        <td class="text-start">
                                            <% if (!category.isDeleted) { %>
                                                <button class="btn btn-danger text-white"
                                                    onclick="deleteCategory('<%= category._id %>')">
                                                    Delete
                                                </button>
                                                <% }else{ %>
                                                    <button class="btn btn-success"
                                                        onclick="restoreCategory('<%= category._id %>')">
                                                        Restore
                                                    </button>
                                                    <% } %>
                                        </td>
                                    </tr>
                                    <% }); %>
                            </tbody>
                        </table>
                    </div>

                </div>

                <!-- Pagination -->
                <div class="pagination-container">
                    <% if (currentPage> 1) { %>
                        <a href="?page=<%= currentPage - 1 %>">&laquo; Previous</a>
                        <% } %>
                            <% for (let i=1; i <=totalPages; i++) { %>
                                <% if (i===currentPage) { %>
                                    <span class="current-page">
                                        <%= i %>
                                    </span>
                                    <% } else { %>
                                        <a href="?page=<%= i %>">
                                            <%= i %>
                                        </a>
                                        <% } %>
                                            <% } %>
                                                <% if (currentPage < totalPages) { %>
                                                    <a href="?page=<%= currentPage + 1 %>">Next &raquo;</a>
                                                    <% } %>
                </div>
            </div>
        </section>
    </div>

    <%- include('../partials/admin/footer.ejs') %>

        <script>
            function handleFormSubmit(event) {
                event.preventDefault();
                if (!validateForm()) return;

                const name = document.getElementsByName("name")[0].value;
                const description = document.getElementById("descriptionId").value;

                fetch('/admin/add-category', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ name, description })
                })
                    .then(response => {
                        if (!response.ok) {
                            return response.json().then(err => {
                                throw new Error(err.message || 'Network response was not ok');
                            });
                        };
                        return response.json();
                    })
                    .then(data => location.reload())
                    .catch(error => {
                        const message = error.message.includes("Category already exists") ?
                            "Category already exists" :
                            "An error occurred while adding the category";
                        swal.fire({ icon: "error", title: "Oops", text: message });
                    });
            }

            function validateForm() {
                clearErrorMessages();
                const name = document.getElementsByName("name")[0].value.trim();
                const description = document.getElementById("descriptionId").value.trim();
                let isValid = true;

                if (!name) {
                    displayErrorMessage("name-error", "Please enter category name");
                    isValid = false;
                } else if (!/^[a-zA-Z\s]+$/.test(name)) {
                    displayErrorMessage("name-error", "Category name should only contain alphabets and spaces");
                    isValid = false;
                }

                if (!description) {
                    displayErrorMessage("description-error", "Please enter category description");
                    isValid = false;
                }
                return isValid;
            }

            function displayErrorMessage(elementId, message) {
                const errorElement = document.getElementById(elementId);
                errorElement.innerHTML = message;
                errorElement.style.display = "block";
            }

            function clearErrorMessages() {
                const errorElements = document.getElementsByClassName("error-message");
                Array.from(errorElements).forEach((element) => {
                    element.innerText = "";
                    element.style.display = "none";
                });
            }

    

            async function deleteCategory(categoryId) {
                const confirmation = await Swal.fire({
                    title: 'Are you sure?',
                    text: "Are you sure to delete this category?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, delete it!'
                })
                if (!confirmation) return;

                try {
                    const response = await fetch("/admin/delete-category", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ categoryId: categoryId }),
                    });
                    console.log(response)
                    const data = await response.json();
                    if (response.ok && data.status) {
                        Swal.fire('Deleted', 'Category has been soft deleted successfully', 'success').then(() => location.reload());
                    } else {
                        Swal.fire("Failed", data.message || "Deleting category failed", "error");
                    }
                } catch (error) {
                    console.error("Error deleting category:", error);
                    Swal.fire('Error', 'Failed to delete category', 'error');
                }
            }


            async function restoreCategory(categoryId) {
                try {
                    const response = await fetch("/admin/restore-category", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ categoryId }),
                    });
                    const data = await response.json();
                    if (response.ok && data.status) {
                        Swal.fire('Category Restored', 'Category has been restored successfully', 'success').then(() => location.reload());
                    } else {
                        Swal.fire("Failed", data.message || "Restoring category failed", "error");
                    }
                } catch (error) {
                    Swal.fire('Error', 'Failed to restore category', 'error');
                }
            }

        </script>