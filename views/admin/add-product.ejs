<%- include('../partials/admin/header.ejs') %>

<link href="https://cdn.jsdelivr.net/npm/cropperjs@1.6.2/dist/cropper.min.css" rel="stylesheet">
<style>
    .error-message {
        color: red;
        font-size: 0.8rem;
        margin-top: 5px;
        display: none;
    }
    .img-upload {
        max-width: 200px;
        max-height: 200px;
        margin: 10px 0;
        display: block;
    }
    .modal-body {
        height: 70vh;
        padding: 20px;
        overflow: hidden;
    }
    .image-container {
        width: 100%;
        height: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
    }
    #modalImage {
        max-height: 100%;
        max-width: 100%;
        width: auto;
        height: auto;
        display: block;
        margin: 0 auto;
    }
</style>

<div class="wrapper">
    <section class="content-main">
        <div class="row">
            <div class="col-10">
                <div class="dashboard-header">
                    <h2 class="content-title">Add New Product</h2>
                </div>
            </div>
            <div class="col-lg-10">
                <div class="card mb-4">
                    <div class="card-body">
                        <form method="post" action="/admin/add-product" enctype="multipart/form-data"
                            onsubmit="return validateForm()">
                            <!-- Product Name -->
                            <div class="mb-4">
                                <label for="product_name" class="form-label">Product Name</label>
                                <input type="text" placeholder="Type here" name="productName"
                                    class="form-control border" id="product_name">
                                <div id="productName-error" class="error-message"></div>
                            </div>

                            <!-- Brand Selection -->
                            <div class="col-lg-4 mb-4">
                                <label class="form-label">Brand</label>
                                <select class="form-select border" name="brand">
                                    <option value="" disabled selected>Select the Brand</option>
                                    <% brand.forEach(brand => { %>
                                        <option value="<%= brand.brandName %>">
                                            <%= brand.brandName %>
                                        </option>
                                    <% }); %>
                                </select>
                                <div id="brand-error" class="error-message"></div>
                            </div>

                            <!-- Category Selection -->
                            <div class="col-lg-4 mb-4">
                                <label class="form-label">Category</label>
                                <select class="form-select border" name="category">
                                    <option value="" disabled selected>Select the Category</option>
                                    <% cat.forEach(cat => { %>
                                        <option value="<%= cat.name %>">
                                            <%= cat.name %>
                                        </option>
                                    <% }); %>
                                </select>
                                <div id="category-error" class="error-message"></div>
                            </div>

                            <!-- Specifications -->
                            <% for(let i = 1; i <= 4; i++) { %>
                                <div class="mb-4">
                                    <label for="specification_<%= i %>" class="form-label">Specification <%= i %></label>
                                    <input type="text" placeholder="Type here" name="specification<%= i %>"
                                        class="form-control border" id="specification_<%= i %>">
                                    <div id="specification<%= i %>-error" class="error-message"></div>
                                </div>
                            <% } %>

                            <!-- Description -->
                            <div class="mb-4">
                                <label class="form-label">Full description</label>
                                <textarea placeholder="Type here" id="descriptionid" name="description"
                                    class="form-control border" rows="4"></textarea>
                                <div id="description-error" class="error-message"></div>
                            </div>

                            <!-- Price and Quantity -->
                            <div class="row">
                                <div class="col-lg-4 mb-4">
                                    <label class="form-label">Price</label>
                                    <input placeholder="â‚¹" name="price" type="text" class="form-control border">
                                    <div id="price-error" class="error-message"></div>
                                </div>

                                <div class="col-lg-4 mb-4">
                                    <label class="form-label">Stock Quantity</label>
                                    <input name="quantity" type="text" class="form-control border">
                                    <div id="quantity-error" class="error-message"></div>
                                </div>
                            </div>

                            <!-- Color -->
                            <div class="row">
                                <div class="col-lg-4 mb-4">
                                    <label class="form-label">Color</label>
                                    <input name="color" type="text" class="form-control border">
                                    <div id="color-error" class="error-message"></div>
                                </div>
                            </div>

                            <!-- Image Upload Section -->
                            <div class="card mb-2">
                                <div class="card-header">
                                    <h4>Choose images (All 4 images required)</h4>
                                </div>
                                <div class="image-upload-section">
                                    <div class="row">
                                        <% for(let i = 1; i <= 4; i++) { %>
                                            <div class="col-md-3">
                                                <div class="card-body align-items-center mb-3">
                                                    <img src="" alt="" id="imgView<%= i %>" class="img-upload">
                                                    <input class="form-control" type="file" name="images" id="input<%= i %>"
                                                        accept="image/png, image/jpeg, image/jpg"
                                                        onchange="viewImage(event, <%= i %>)">
                                                    <div id="images-error-<%= i %>" class="error-message"></div>
                                                </div>
                                            </div>
                                        <% } %>
                                    </div>
                                    <div id="images-error" class="error-message"></div>
                                </div>
                            </div>

                            <div>
                                <button class="btn btn-md rounded font-sm hover-up" type="button"
                                    onclick="validateAndSubmit()">Submit</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>

<div class="modal fade" id="cropModal" tabindex="-1" role="dialog" aria-labelledby="cropModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="cropModalLabel">Crop Image</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="image-container">
                    <img id="modalImage" src="" alt="Image to crop">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" id="cancelCropButton">Cancel</button>
                <button type="button" class="btn btn-primary" id="cropButton">Crop</button>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/cropperjs@1.6.2/dist/cropper.min.js"></script>
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<script>
let cropper;
let currentImageIndex;

function validateAndSubmit() {
    if (validateForm()) {
        console.log("validated");
        document.forms[0].submit();
    }
}

function viewImage(event, index) {
    currentImageIndex = index;
    let input = event.target;
    if (input.files && input.files[0]) {
        let reader = new FileReader();
        reader.onload = function (e) {
            let modalImage = document.getElementById("modalImage");
            modalImage.src = e.target.result;

            $('#cropModal').modal('show');

            if (cropper) {
                cropper.destroy();
            }
            cropper = new Cropper(modalImage, {
                aspectRatio: 1,
                viewMode: 1,
                guides: true,
                background: false,
                responsive:true,
                autoCropArea: 1,
                zoomable: true,
            });
        };
        reader.readAsDataURL(input.files[0]);
    }
}

document.getElementById("cropButton").onclick = function () {
    if (cropper) {
        let croppedCanvas = cropper.getCroppedCanvas();
        let imgView = document.getElementById("imgView" + currentImageIndex);
        imgView.src = croppedCanvas.toDataURL('image/jpeg', 1.0);

        let timestamp = new Date().getTime();
        let fileName = `cropped-img-${timestamp}-${currentImageIndex}.png`;

        croppedCanvas.toBlob(blob => {
            let input = document.getElementById('input' + currentImageIndex);
            let imgFile = new File([blob], fileName, { type: 'image/png' });
            const dataTransfer = new DataTransfer();
            dataTransfer.items.add(imgFile);
            input.files = dataTransfer.files;
        });

        $('#cropModal').modal('hide');
    }
};



function validateForm() {
    console.log("validation running");
    clearErrorMessages();
    const name = document.getElementsByName('productName')[0].value;
    const specification1 = document.getElementsByName('specification1')[0].value;
    const specification2 = document.getElementsByName('specification2')[0].value;
    const specification3 = document.getElementsByName('specification3')[0].value;
    const specification4 = document.getElementsByName('specification4')[0].value;
    const description = document.getElementById('descriptionid').value;
    const brand = document.getElementsByName('brand')[0].value;
    const category = document.getElementsByName('category')[0].value;
    const price = document.getElementsByName('price')[0].value;
    const color = document.getElementsByName('color')[0].value;
    const quantity = document.getElementsByName('quantity')[0].value;

    let isValid = true;

    if (name.trim() === "") {
        displayErrorMessage('productName-error', 'Please enter a product name.');
        isValid = false;
    } else if (!/^[a-zA-Z0-9\s]+$/.test(name.trim())) {
        displayErrorMessage('productName-error', 'Product name should contain only alphabetic characters and numbers.');
        isValid = false;
    }

    if (brand.trim() === "") {
        displayErrorMessage('brand-error', 'Please select a brand.');
        isValid = false;
    }

    if (category.trim() === "") {
        displayErrorMessage('category-error', 'Please select a category.');
        isValid = false;
    }

    if (specification1.trim() === "") {
        displayErrorMessage('specification1-error', 'Please enter a specification.');
        isValid = false;
    }
    if (specification2.trim() === "") {
        displayErrorMessage('specification2-error', 'Please enter a specification.');
        isValid = false;
    }
    if (specification3.trim() === "") {
        displayErrorMessage('specification3-error', 'Please enter a specification.');
        isValid = false;
    }
    if (specification4.trim() === "") {
        displayErrorMessage ('specification4-error', 'Please enter a specification.');
        isValid = false;
    }

    if (description.trim() === "") {
        displayErrorMessage('description-error', 'Please enter a product description.');
        isValid = false;
    }

    if (parseInt(quantity.trim()) < 0 || quantity.trim() === "" || isNaN(quantity.trim())) {
        displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
        isValid = false;
    }

    if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price.trim()) < 0 || price.trim() === "") {
        displayErrorMessage('price-error', 'Please enter a valid non-negative price.');
        isValid = false;
    }

    if (color.trim() === "") {
        displayErrorMessage('color-error', 'Please enter a color.');
        isValid = false;
    }

    let allImagesUploaded = true;
    for (let i = 1; i <= 4; i++) {
        const input = document.getElementById('input' + i);
        if (input.files.length === 0) {
            displayErrorMessage("images-error-" + i, 'Please select an image.');
            allImagesUploaded = false;
            isValid = false;
        }
    }

    if (!allImagesUploaded) {
        displayErrorMessage("images-error", 'Please upload all 4 images.');
    }

    return isValid;
}

function displayErrorMessage(elementId, message) {
    var errorElement = document.getElementById(elementId);
    if (errorElement) {
        errorElement.innerText = message;
        errorElement.style.display = "block";
    }
}

function clearErrorMessages() {
    const errorElements = document.getElementsByClassName('error-message');
    Array.from(errorElements).forEach(element => {
        element.innerText = '';
        element.style.display = "none";
    });
}

$('#cropModal').on('hidden.bs.modal', function () {
    if (cropper) {
        cropper.destroy();
    }
});
</script>

<%- include('../partials/admin/footer.ejs') %>