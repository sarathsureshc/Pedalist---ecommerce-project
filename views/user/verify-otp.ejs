<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pedalist - User login</title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">

    <!-- Sweet alert -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">


    <!-- Bootstrap Icons -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">

    <!-- Racing Sans One Font -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Racing+Sans+One&display=swap" rel="stylesheet">

    <!-- Bullseye bullet -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">


    <!-- Custom CSS -->
    <link rel="stylesheet" href="styles.css">
</head>

<body>

    <!-- Navbar (transparent and positioned over the image) -->
    <nav class="navbar navbar-expand-lg navbar-light">
        <div class="container">
            <a class="navbar-brand" href="/">
                <img src="pedalist-logo.png" alt="Logo" width="60" height="50">
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
                aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav mx-auto"> <!-- Centered items -->
                    <li class="nav-item"><a class="nav-link" href="/">Home</a></li>
                    <li class="nav-item"><a class="nav-link" href="#">Bicycles</a></li>
                    <li class="nav-item"><a class="nav-link" href="#">Accessories</a></li>
                    <li class="nav-item"><a class="nav-link" href="#">About Us</a></li>
                    <li class="nav-item"><a class="nav-link" href="#">Contact</a></li>
                    <li class="nav-item"><a class="nav-link" href="#">Login</a></li>
                </ul>
                <ul class="navbar-nav ms-auto"> <!-- Ensures the cart is aligned to the right -->
                    <li class="nav-item">
                        <a href="#" class="nav-link cart-link">
                            <i class="bi bi-cart-fill"></i>
                            <span class="cart-badge">3</span>
                        </a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>


    <!-- Background image section -->
    <div class="background-image">
        <div class="color-overlay"></div>

        <!-- Login Form -->
        <div class="otp">
            <img alt="Illustration of a hand holding a phone with a checkmark on the screen" height="150"
                src="https://storage.googleapis.com/a1aa/image/ACGPuh2hPXp8IxHvSRhtBbEUlCjRvgBs1hIAWShnKNqdjB5E.jpg"
                width="150" />
            <h2>OTP Verification</h2>
            <p>Enter the OTP sent to +91 9544796346</p>
            <form id="otpForm" action="/verify-otp" method="post" onsubmit="return validateOTPForm(event)">

                <div class="otp-inputs">
                    <input maxlength="1" type="text" class="otp-input" required />
                    <input maxlength="1" type="text" class="otp-input" required />
                    <input maxlength="1" type="text" class="otp-input" required />
                    <input maxlength="1" type="text" class="otp-input" required />
                    <input maxlength="1" type="text" class="otp-input" required />
                    <input maxlength="1" type="text" class="otp-input" required />
                </div>
                <p class="resend">
                    Didn't you receive the OTP? Resend OTP in <span id="timer">30</span> seconds
                    <a href="#" id="resendLink" style="pointer-events: auto; opacity: 1;" onclick="resendOTP()">Resend
                        OTP</a>
                </p>

                <button type="submit" class="verify-button" id="verifyButton">Verify</button>

            </form>
        </div>

    </div>

    <%- include('../partials/user/footer.ejs') %>

        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.js"></script>
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>


        <script>
            document.addEventListener("DOMContentLoaded", function () {
                const timerElement = document.getElementById('timer');
                const resendLink = document.getElementById('resendLink');
                const otpInputs = document.querySelectorAll('.otp-input'); // Define otpInputs globally
                let timer = 30; // Timer starts from 30 seconds

                // Countdown function
                const countdown = setInterval(function () {
                    timer--;
                    timerElement.textContent = timer;

                    if (timer === 0) {
                        clearInterval(countdown);
                        // Enable the resend link
                        resendLink.style.pointerEvents = 'auto'; // Allow clicks
                        resendLink.style.opacity = '1'; // Make the link fully visible
                        resendLink.textContent = 'Resend OTP'; // Update text
                    }
                }, 1000);

                // Handle Resend OTP action
                resendLink.addEventListener("click", function (event) {
                    event.preventDefault();

                    // Disable link and reset the timer
                    resendLink.style.pointerEvents = 'none'; // Disable clicks
                    resendLink.style.opacity = '0.5'; // Make the link less visible
                    timer = 30; // Reset timer
                    timerElement.textContent = timer;

                    // Restart countdown
                    const timerInterval = setInterval(function () {
                        timer--;
                        timerElement.textContent = timer;

                        if (timer === 0) {
                            clearInterval(timerInterval);
                            resendLink.style.pointerEvents = 'auto';
                            resendLink.style.opacity = '1';
                            resendLink.textContent = 'Resend OTP';
                        }
                    }, 1000);
                });

                // Handle input events for OTP inputs
                otpInputs.forEach((input, index) => {
                    input.addEventListener('input', () => {
                        // Move to the next input if the current input is filled
                        if (input.value.length === 1 && index < otpInputs.length - 1) {
                            otpInputs[index + 1].focus();
                        }
                    });

                    input.addEventListener('keydown', (event) => {
                        // Move back to the previous input if the backspace key is pressed
                        if (event.key === 'Backspace' && input.value === '' && index > 0) {
                            otpInputs[index - 1].focus();
                        }
                    });

                    // Handle paste event
                    input.addEventListener('paste', (event) => {
                        const pastedData = event.clipboardData.getData('text').slice(0, 6); // Limit to 6 digits
                        otpInputs.forEach((otpInput, idx) => {
                            otpInput.value = pastedData[idx] || ''; // Fill in the input fields
                            if (idx < pastedData.length) {
                                otpInput.dispatchEvent(new Event('input')); // Trigger input event to move focus
                            }
                        });
                        event.preventDefault(); // Prevent default paste behavior
                    });
                });
            });

            // Handle Verify button click
            document.getElementById('verifyButton').addEventListener('click', function (event) {
                event.preventDefault(); // Prevent default form submission
                let otpValue = '';
                const otpInputs = document.querySelectorAll('.otp-input'); // Get otp inputs inside the click event

                otpInputs.forEach((input) => {
                    otpValue += input.value; // Concatenate values from input fields
                });

                // Log the OTP value (or handle it as needed)
                console.log('OTP entered:', otpValue);

                // Validate the OTP before proceeding
                if (otpValue.length !== 6) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Please enter a valid 6-digit OTP'
                    });
                    return false;
                }

                // Use otpValue directly in the AJAX call
                $.ajax({
                    type: "POST",
                    url: "/verify-otp",
                    data: { otp: otpValue },
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                icon: "success",
                                title: "OTP Verified Successfully",
                                showConfirmButton: false,
                                timer: 1500,
                            }).then(() => {
                                window.location.href = response.redirectUrl;
                            });
                        } else {
                            Swal.fire({
                                icon: "error",
                                title: "Error",
                                text: response.message
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            icon: "error",
                            title: "Invalid OTP",
                            text: "Please enter a valid OTP"
                        });
                    }
                });

                return false;
            });

            function resendOTP() {
                // Reset the timer
                let timer = 30;
                const timerElement = document.getElementById('timer');

                // Disable link during the process
                const resendLink = document.getElementById('resendLink');
                resendLink.style.pointerEvents = 'none'; // Disable clicks
                resendLink.style.opacity = '0.5'; // Make the link less visible

                // Start countdown
                const countdown = setInterval(function () {
                    timer--;
                    timerElement.textContent = timer;

                    if (timer === 0) {
                        clearInterval(countdown);
                        resendLink.style.pointerEvents = 'auto'; // Enable clicks
                        resendLink.style.opacity = '1'; // Make the link fully visible
                        resendLink.textContent = 'Resend OTP'; // Update text
                    }
                }, 1000);

                // AJAX request to resend OTP
                $.ajax({
                    type: "POST",
                    url: "/resend-otp",
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                icon: "success",
                                title: "OTP Resent Successfully",
                                showConfirmButton: false,
                                timer: 1500,
                            });
                        } else {
                            Swal.fire({
                                icon: "error",
                                title: "Error",
                                text: "An error occurred while resending OTP. Please try again"
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            icon: "error",
                            title: "Error",
                            text: "An error occurred. Please try again later."
                        });
                    }
                });
            }


        </script>